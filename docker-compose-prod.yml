version: '3'

services:
  frontend:
    #user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: dockerfiles/react
    # entrypoint: /entrypoint.sh
    command: npm run build
    container_name: frontend
    depends_on:
      -  backend
    #ports:
    #  - "${FRONTEND_PORT}:3000"
    expose: 
      - "3000"
    volumes:
      - ./src/frontend/src:/usr/src/src
      - ./src/frontend/public:/usr/src/public
      - ./src/frontend/build:/usr/src/build
    environment:
      - HOST=0.0.0.0
      - PORT=${FRONTEND_PORT}
      - CHOKIDAR_USEPOLLING=true
      - API_HOST=${BACKEND_RUNNING_ON}
      - API_PORT=${BACKEND_PORT}
  backend:
    #user: "${UID}:${GID}"
    build:
      context: .
      dockerfile: dockerfiles/backend
    command: gunicorn api.wsgi --bind=0.0.0.0
    container_name: backend
    depends_on:
      - db
    #ports:
    #  - "${BACKEND_PORT}:8000"
    expose: 
      - "8000"
    volumes:
      - ./src/backend:/opt/backend
    environment:
      - PYTHONPATH=/opt/backend
      - DJANGO_SETTINGS_MODULE=api.settings
      - FRONTEND_PORT=${FRONTEND_PORT}
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
  db:
    image: postgres:12.1
    restart: unless-stopped
    container_name: database
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
  nginx:
    image: nginx:1.17.6
    restart: always
    container_name: nginx
    ports:
      - 80:80
      - "443:443"
    volumes:
      - ./conf/nginx-proxy-prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src/frontend/build:/opt/frontend:ro
      - ./src/backend:/opt/backend
      - ./ssl/concatenated.cer:/etc/ssl/concatenated.cer
      - ./ssl/private_key.key:/etc/ssl/private_key.key
    depends_on:
      - backend    
volumes:
  pgdata:
