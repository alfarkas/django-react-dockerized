version: '3'

services:
  backend: &backend
    user: "container_user:container_user"
    image: hci/backend:latest
    command: gunicorn project.wsgi --bind=0.0.0.0
    container_name: backend
    tty: true
    stdin_open: true
    depends_on:
      - db
      - rabbitmq
      - celery_worker
    expose: 
      - "8000"
    volumes:
      - ./src/backend:/opt/backend
    environment:
      - PYTHONPATH=/opt/backend
      - DJANGO_SETTINGS_MODULE=project.settings
      - FRONTEND_PORT=${FRONTEND_PORT}
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
  db:
    image: postgres:12.1
    restart: unless-stopped
    container_name: database
    volumes:
      - pgdata:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
  rabbitmq:
    image: rabbitmq:3.8.2-alpine
    container_name: rabbitmq
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1
  celery_worker:
    <<: *backend
    container_name: celery_worker
    command: celery -A project worker --loglevel=info
    ports: []
    tty: false
    stdin_open: false
    depends_on: 
      - rabbitmq
      - db
  celery_beat:
    <<: *backend
    container_name: celery_beat
    command: celery -A project beat --loglevel=info
    ports: []
    tty: false
    stdin_open: false
    depends_on: 
      - rabbitmq
      - db
  nginx:
    image: hci/frontend:latest
    restart: always
    container_name: nginx
    ports:
      - 80:80
      - "443:443"
    volumes:
      - ./conf/nginx-proxy-prod.conf:/etc/nginx/conf.d/default.conf:ro
      # - ./src/frontend/build:/opt/frontend:ro
      - ./src/backend:/opt/backend
      - ./ssl/concatenated.cer:/etc/ssl/concatenated.cer
      - ./ssl/private_key.key:/etc/ssl/private_key.key
    depends_on:
      - backend    
volumes:
  pgdata:
